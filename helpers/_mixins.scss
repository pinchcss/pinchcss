/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}


@mixin hover ($all-devices: true){
  @if $all-devices{
    &:focus,
    &:hover {
      outline: 0;
      @content;
    }
  } @else {
    @include media('no-touch') {
      &:focus,
      &:hover {
        @content;
      }
    }
  }
}

@mixin focus (){
  &:focus {
    outline: 0;
    @content;
  }
}



@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@function rem($pixels, $context: $font-base) {
  @return (strip-unit($pixels)/$context) * 1rem;
}

@function em($pixels, $context: $font-base) {
  @return (strip-unit($pixels)/$context) * 1em;
}
