$checkbox-input: (
  width: 1em,
  height: 1em,
  border: $input-border-width solid $input-border-color,
  border-radius: $border-radius,
) !default;

$checkbox-mark: (
  width: em(6),
  height: em(8),
  border: solid $input-border-color,
  border-width: 0 em(2) em(2) 0,
  transform: rotate(45deg) translate(-50%, -50%),
  transform-origin: 50% 40%,
) !default;

$radio-mark: (
  width: em(6),
  height: em(6),
  background: $input-border-color,
  transform: translate(-50%, -50%),
  border-radius: 50%,
) !default;

@mixin input {
  box-sizing: border-box;
  min-height: 2.5em;
  line-height: 1.5;
  border: $input-border-width $input-border-color solid;
  border-radius: $border-radius;
  background: transparent;
  color: $body-color;
  transition: all .5s ease;
  padding: em(6) em(12);
  margin-bottom: $input-margin-mottom;
  display: block;
  width: 100%;
  @include focus {
    box-shadow: 0 0 5px $input-border-color inset;
  };
  @at-root ::placeholder {
    opacity: 1;
    color: rgba($body-color, .5);
  }
}

@mixin check_radio {
  @if $style-checkboxes{
    position: absolute;
    left: -999em;

    + label {
      display: inline-block;
      position: relative;
      padding-left: map_get($checkbox-input, width) * 1.25;
      &:before,
      &:after {
        display: block;
        content: '';
        position: absolute;
        box-sizing: border-box;
        top: $line-height-base/2 * 1em;
        transition: all .5s ease;
      }
      &:before {
        left: map_get($checkbox-input, width) / 2;
        transform: translate(-50%, -50%);
        @include print-styles($checkbox-input);
      }
      &:after {
        opacity: 0;
      }
    }

    &:focus + label,
    & + label:hover {
      &:before {
        box-shadow: 0 0 5px $input-border-color inset;
      }
    }

    &:checked {
      + label {
        &:after {
          opacity: 1;
        }
      }
    }

    @at-root input {
      &[type='checkbox'] + label {
        &:after {
          left: map_get($checkbox-input, width) / 2 - map_get($checkbox-mark, width) / 2;
          @include print-styles($checkbox-mark);
        }
      }
      &[type='radio'] + label {
        &:before {
          border-radius: 50%;
        }
        &:after {
          left: map_get($checkbox-input, width) / 2;
          @include print-styles($radio-mark);
        }
      }
    }

  } @else {
    width: auto;
    min-height: 0;
    border: none;
    box-shadow: none;
    float: left;
    position: relative;
    background: rgba(255, 255, 255, 0.00784314); // Default IOS style
    top: $line-height-base/2 * 1em;
    transform: translate(0, -50%);
    @include focus {
      outline: -webkit-focus-ring-color auto 5px;
    };

    &:checked {
      background: rgba(0, 0, 0, 0.8); // Default IOS style
    }

    + label {
      padding-right: 1ex;
      position: relative;
      margin-left: 1.25em;
      margin-bottom: 0;
    }
  }
}


%input { @include input; }
%check_radio { @include check_radio; }


@mixin inputs {
  input {
    @extend %input;
  }

  input{
    &[type=checkbox],
    &[type=radio] {
      @extend %check_radio;
    }
  }

  textarea {
    @extend %input;
    vertical-align: top;
    max-width: 100%;
  }

  select {
    @extend %input;
    height: 2.5em;
    @if $style-select {
      -moz-appearance: none;
      -webkit-appearance: none;
      appearance: none;

      &::-ms-expand {
        display: none;
      }

      $knob-width: em(9);
      $knob-height: em(12);
      $knob-color: $body-color;
      $knob: '<svg xmlns="http://www.w3.org/2000/svg" width="#{$knob-width}" height="#{$knob-height}" viewBox="0 0 9 12"><path fill="#{$knob-color}" d="M0.722,4.823L-0.01,4.1,4.134-.01,4.866,0.716Zm7.555,0L9.01,4.1,4.866-.01l-0.732.726ZM0.722,7.177L-0.01,7.9,4.134,12.01l0.732-.726Zm7.555,0L9.01,7.9,4.866,12.01l-0.732-.726Z"/></svg>';
      padding-right: em(24) + $knob-width;
      background-image: url('data:image/svg+xml;utf8,#{svg-replace($knob)}');
      background-repeat: no-repeat;
      background-position: right em(12) center;
      &.placeholder {
        color: rgba($body-color, .5);
      }
    }
  }
}
