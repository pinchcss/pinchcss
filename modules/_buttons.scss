@use 'variables' as *;
@use 'functions' as *;

@mixin button {
	--color: var(--#{$prefix}-button-color);
	--background: var(--#{$prefix}-default);
	color: var(--color);
	background: var(--background);
	box-sizing: border-box;
	min-height: 2.5em;
	padding: em(6) em(24);
	border: var(--#{$prefix}-button-border-width) var(--#{$prefix}-button-border-color) solid;
	border-radius: var(--#{$prefix}-button-border-radius);
	font-weight: 500;
	text-align: center;
	cursor: pointer;
	transition: all 0.5s ease;
	margin-bottom: 0.5ex;
	user-select: none;
	transition: all 0.5s ease;

	&:focus-visible {
		outline: 2px solid $brand-main;
		outline-offset: 1px;
	}

	&:hover {
		box-shadow: inset 0 0 0 9em rgba(255, 255, 255, 0.5);
	}

	&:active {
		transform: scale(0.95);
	}

	&[disabled] {
		opacity: 0.5;
		cursor: not-allowed;
		box-shadow: none !important;
		transform: none !important;
	}

	&.primary {
		--background: var(--p-primary);
	}

	&.info {
		--background: var(--p-info);
	}

	&.success {
		--background: var(--p-success);
	}

	&.warning {
		--background: var(--p-warning);
	}

	&.danger {
		--background: var(--p-danger);
	}

	&.outlined {
		background: transparent;
		border-color: var(--background);
		--color: var(--background);
		&:hover {
			&:not([disabled]) {
				background: var(--background);
				color: var(--#{$prefix}-button-color);
			}
		}
		&[disabled] {
			background: transparent;
		}
	}

	&.inverted {
		--color: #{$body-color};
		--background: #{$body-bg};
		&:hover {
			&:not([disabled]) {
				background: darken($body-bg, 15%);
			}
		}
		&.outlined {
			background: transparent;
			color: var(--background);
			border-color: var(--background);
			&:hover {
				&:not([disabled]) {
					background: var(--background);
					color: var(--color);
				}
			}
		}
	}
}

%button {
	:where(&) {
		@include button;
	}
}

button:not([role='link']),
[type='button' i],
[type='reset' i],
[type='submit' i] {
	@extend %button;
}

[role='button'] {
	@extend %button;

	:where(&) {
		display: inline-block;
		text-decoration: none;
	}

	:where(&:not(.outlined, .inverted)) {
		color: var(--#{$prefix}-button-color);
	}
}
