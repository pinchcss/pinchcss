@use 'variables' as *;
@use 'functions' as *;

@mixin button {
	:where(&) {
		--color: var(--#{$prefix}button-color);
		--background: var(--#{$prefix}default);
		color: var(--color);
		background: var(--background);
		box-sizing: border-box;
		min-height: 2.5em;
		padding: em(6) em(24);
		border: var(--#{$prefix}button-border-width) var(--#{$prefix}button-border-color) solid;
		border-radius: var(--#{$prefix}button-border-radius);
		font-weight: 500;
		text-align: center;
		cursor: pointer;
		transition: all 0.5s ease;
		margin-bottom: 0.5ex;
		user-select: none;
		transition: all 0.5s ease;

		&:focus-visible {
			outline: 2px solid $brand-main;
			outline-offset: 1px;
		}

		&:hover {
			box-shadow: inset 0 0 0 5em rgb(153, 153, 153, 0.8);
		}

		&:active {
			transform: scale(0.95);
		}

		&[disabled] {
			opacity: 0.5;
			cursor: not-allowed;
			box-shadow: none !important;
			transform: none !important;
		}

		&.primary {
			--background: var(--#{$prefix}primary);
		}

		&.info {
			--background: var(--#{$prefix}info);
			--color: var(--#{$prefix}info-color, var(--#{$prefix}button-color));
			--color-contrast: var(--#{$prefix}info-color);
		}

		&.success {
			--background: var(--#{$prefix}success);
		}

		&.warning {
			--background: var(--#{$prefix}warning);
		}

		&.danger {
			--background: var(--#{$prefix}danger);
		}

		&.outlined {
			background: transparent;
			border-color: var(--background);
			--color: var(--background);
			&:hover {
				&:not([disabled]) {
					background: var(--background);
					color: var(--color-contrast, var(--#{$prefix}button-color));
				}
			}
		}
	}
}

%button {
	@include button;
}

button:not([role='link']),
[type='button' i],
[type='reset' i],
[type='submit' i] {
	@extend %button;
}

[role='button'] {
	@extend %button;

	:where(&) {
		display: inline-block;
		text-decoration: none;
	}
}
